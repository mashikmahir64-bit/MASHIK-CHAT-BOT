module.exports.config = {
  name: "crush",
  version: "7.3.1",
  hasPermssion: 0,
  credits: "ùêÇùêòùêÅùêÑùêë ‚ò¢Ô∏è_ñ£ò -ùêÅùêéùêì ‚ö†Ô∏è ùëªùë¨ùë®ùë¥_ ‚ò¢Ô∏è",
  description: "Get Pair From Mention",
  commandCategory: "love",
  usages: "[@mention]",
  cooldowns: 5,
  dependencies: {
    "axios": "",
    "fs-extra": "",
    "path": "",
    "jimp": ""
  }
};

module.exports.onLoad = async () => {
  const { resolve } = global.nodemodule["path"];
  const { existsSync, mkdirSync } = global.nodemodule["fs-extra"];
  const { downloadFile } = global.utils;
  const dirMaterial = __dirname + `/cache/canvas/`;
  const path = resolve(__dirname, 'cache/canvas', 'crush.png');
  if (!existsSync(dirMaterial + "canvas")) mkdirSync(dirMaterial, { recursive: true });
  if (!existsSync(path)) await downloadFile("https://i.imgur.com/PlVBaM1.jpg", path);
};

async function makeImage({ one, two }) {
  const fs = global.nodemodule["fs-extra"];
  const path = global.nodemodule["path"];
  const axios = global.nodemodule["axios"];
  const jimp = global.nodemodule["jimp"];
  const __root = path.resolve(__dirname, "cache", "canvas");

  let batgiam_img = await jimp.read(__root + "/crush.png");
  let pathImg = __root + `/batman${one}_${two}.png`;
  let avatarOne = __root + `/avt_${one}.png`;
  let avatarTwo = __root + `/avt_${two}.png`;

  let getAvatarOne = (await axios.get(`https://graph.facebook.com/${one}/picture?width=512&height=512&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`, { responseType: 'arraybuffer' })).data;
  fs.writeFileSync(avatarOne, Buffer.from(getAvatarOne, 'utf-8'));

  let getAvatarTwo = (await axios.get(`https://graph.facebook.com/${two}/picture?width=512&height=512&access_token=6628568379%7Cc1e620fa708a1d5696fb991c1bde5662`, { responseType: 'arraybuffer' })).data;
  fs.writeFileSync(avatarTwo, Buffer.from(getAvatarTwo, 'utf-8'));

  let circleOne = await jimp.read(await circle(avatarOne));
  let circleTwo = await jimp.read(await circle(avatarTwo));
  batgiam_img.composite(circleOne.resize(191, 191), 93, 111).composite(circleTwo.resize(190, 190), 434, 107);

  let raw = await batgiam_img.getBufferAsync("image/png");

  fs.writeFileSync(pathImg, raw);
  fs.unlinkSync(avatarOne);
  fs.unlinkSync(avatarTwo);

  return pathImg;
}

async function circle(image) {
  const jimp = require("jimp");
  image = await jimp.read(image);
  image.circle();
  return await image.getBufferAsync("image/png");
}

const crushCaptions = [
  "__-‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó ‡¶®‡¶æ ‡¶π‡¶≤‡ßá‡¶ì ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑ ‡¶∏‡¶¨ ‡¶∏‡¶Æ‡ßü ‡¶™‡ßç‡¶∞‡¶ø‡ßü ‡¶•‡¶æ‡¶ï‡ßá <-!!-3üñ§üåºüôÇ",
  "__-‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶ø ‡¶®‡¶æ ‡¶¨‡¶≤‡ßá‡¶ì ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ ‡¶Ø‡¶æ‡ßü ‡¶Æ‡¶æ‡¶®‡ßÅ‡¶∑‡¶ü‡¶ø‡¶∞ ‡¶™‡¶æ‡¶∂‡ßá ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡¶æ‡¶â‡¶ï‡ßá ‡¶∏‡¶π‡ßç‡¶Ø ‡¶π‡ßü ‡¶®‡¶æ ‡¶§‡¶æ‡¶á <-!!-3üñ§üåºüôÇ",
  "__-‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶æ‡¶∏ ‡¶õ‡¶æ‡ßú‡¶æ ‡¶≠‡¶æ‡¶≤‡ßã‡¶¨‡¶æ‡¶∏‡¶æ ‡¶Ö‡¶∞‡ßç‡¶•‡¶π‡ßÄ‡¶® ‡¶Ü‡¶∞ ‡¶Ö‡¶ß‡¶ø‡¶ï‡¶æ‡¶∞ ‡¶õ‡¶æ‡ßú‡¶æ ‡¶∏‡¶Æ‡ßç‡¶™‡¶∞‡ßç‡¶ï ‡¶Æ‡ßÇ‡¶≤‡ßç‡¶Ø‡¶π‡ßÄ‡¶® <-!!-3üñ§üåºüôÇ",
  "__-‡¶Æ‡ßÉ‡¶§‡ßç‡¶Ø‡ßÅ ‡¶Ö‡¶®‡¶ø‡¶¨‡¶æ‡¶∞‡ßç‡¶Ø ‡¶ú‡ßá‡¶®‡ßá‡¶ì ‡¶ú‡¶®‡ßç‡¶Æ ‡¶®‡¶ø‡¶≤‡¶æ‡¶Æ ‡¶Ü‡¶∞ ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶™‡¶æ‡¶¨‡ßã ‡¶®‡¶æ ‡¶ú‡ßá‡¶®‡ßá‡¶ì ‡¶ö‡¶æ‡¶á‡¶≤‡¶æ‡¶Æ <-!!-3üñ§üåºüôÇ",
  "__-‡¶ì‡¶π‡ßá ‡¶ï‡¶ø ‡¶ï‡¶∞‡¶ø‡¶≤‡ßá ‡¶¨‡¶≤‡ßã ‡¶™‡¶æ‡¶á‡¶¨‡ßã ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞‡ßá ‡¶∞‡¶æ‡¶ñ‡¶ø‡¶¨‡ßã ‡¶Ü‡¶Å‡¶ñ‡¶ø‡¶§‡ßá ‡¶Ü‡¶Å‡¶ñ‡¶ø <-!!-3üñ§üåºüôÇ",
  "__-‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶¶‡¶æ‡¶¨‡ßÄ ‡¶Ü‡¶Æ‡¶ø ‡¶Æ‡ßÉ‡¶§‡ßç‡¶Ø‡ßÅ‡¶∞ ‡¶™‡¶∞‡ßá‡¶ì ‡¶õ‡¶æ‡ßú‡¶¨‡ßã ‡¶®‡¶æ <-!!-3üñ§üåºüôÇ",
  "__-‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡ßá‡¶á ‡¶™‡ßç‡¶∞‡¶ø‡ßü ‡¶Ø‡¶æ‡¶ï‡ßá ‡¶¶‡ßá‡¶ñ‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶Æ‡ßÅ‡¶ñ‡ßá ‡¶π‡¶æ‡¶∏‡¶ø ‡¶´‡ßÅ‡¶ü‡ßá <-!!-3üñ§üåºüôÇ",
  "__-‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶æ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ö‡¶æ‡¶á ‡¶Ø‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø‡¶§‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶õ‡¶æ‡ßú‡¶æ ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶ï‡ßá‡¶â ‡¶®‡¶æ‡¶á <-!!-3üñ§üåºüôÇ",
  "__-‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ü‡¶∞ ‡¶®‡¶æ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶∂‡¶π‡¶∞‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá ‡¶™‡ßá‡ßü‡ßá ‡¶ó‡ßá‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶∏‡¶¨ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶π‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßá <-!!-3üñ§üåºüôÇ",
  "__-‡¶™‡ßç‡¶∞‡¶§‡ßç‡¶Ø‡ßá‡¶ï‡ßá‡¶∞‡ßá'‡¶á ‡¶è‡¶ï‡¶ü‡¶æ ‡¶®‡ßá‡¶∂‡¶æ ‡¶•‡¶æ‡¶ï‡ßá ‡¶Ü‡¶∞ ‡¶Ü‡¶Æ‡¶æ‡¶∞ ‡¶®‡ßá‡¶∂‡¶æ'‡¶ü‡¶æ‡¶á ‡¶§‡ßÅ‡¶Æ‡¶ø <-!!-3üñ§üåºüôÇ"
];

module.exports.run = async function ({ event, api, args }) {
  const fs = global.nodemodule["fs-extra"];
  const { threadID, messageID, senderID } = event;
  const mention = Object.keys(event.mentions);
  if (!mention[0]) return api.sendMessage("‡¶è‡¶ï‡¶ú‡¶®‡¶ï‡ßá ‡¶Æ‡ßá‡¶®‡¶∂‡¶® ‡¶ï‡¶∞‡ßã!", threadID, messageID);
  else {
    const one = senderID, two = mention[0];
    const caption = crushCaptions[Math.floor(Math.random() * crushCaptions.length)];
    return makeImage({ one, two }).then(path =>
      api.sendMessage({ body: `‚úß‚Ä¢‚ùÅùêÇùê´ùêÆùê¨ùê°‚ùÅ‚Ä¢‚úß\n\n${caption}`, attachment: fs.createReadStream(path) }, threadID, () => fs.unlinkSync(path), messageID)
    );
  }
};
